[DATASET]
dataset_package = decentralizepy.datasets.CIFAR10
dataset_class = CIFAR10
model_class = LeNet

train_dir = C:/Users/MAROUAN/Desktop/PFE/decentralizepy/eval/data
test_dir = C:/Users/MAROUAN/Desktop/PFE/decentralizepy/eval/data
; python list of fractions below
sizes = 
random_seed = 90
partition_niid = dirichlet
alpha = 0.5

[OPTIMIZER_PARAMS]
optimizer_package = torch.optim
optimizer_class = Adam
lr = 0.0005

[TRAIN_PARAMS]
training_package = decentralizepy.training.Training
training_class = Training
rounds = 20
full_epochs = True
batch_size = 32 
shuffle = True
loss_package = torch.nn
loss_class = CrossEntropyLoss

[COMMUNICATION]
comm_package = decentralizepy.communication.TCP
comm_class = TCP
addresses_filepath = ip.json

[SHARING]
sharing_package = decentralizepy.sharing.PlainAverageSharing 
sharing_class = PlainAverageSharing

compress = False

[NODE]
graph_degree = 7

[WEIGHTS]
weights_store_dir = weights
